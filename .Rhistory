pmap(filtered_tbl, function(category, .value) {
send_email("alsaghierbayan@gmail.com", category, value)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>% filter(.value >70)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, value) {
send_email("alsaghierbayan@gmail.com", category, value)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>% filter(.value >70)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, value,...) {
send_email("alsaghierbayan@gmail.com", category, value)
})
}
future_forecast_ensemble_tbl
filtered_tbl <- future_forecast_ensemble_tbl %>%
filter(identifier %in% input$indicator & .value > 70)%>%
group_by(identifier) %>%
# Focus on end of series
filter_by_time(
.start_date = last(date) %-time% input$lookback,
.end_date = "end"
)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
knitr::opts_chunk$set(
echo    = FALSE,
message = FALSE,
warning = FALSE
)
# IMPORTANT NOTE!!!
# INSTALL DEVELOPMENT VERSION OF RMARKDOWN AND CROSSTALK
# rmarkdown   * 2.6.6   2021-02-02 [1] Github (rstudio/rmarkdown@d8e7a15)
# Run These:
# remotes::install_github("rstudio/rmarkdown")
# remotes::install_github("rstudio/crosstalk")
library(shiny)
library(collapsibleTree)
library(plotly)
library(DT)
library(modeltime)
library(modeltime.ensemble)
library(tidymodels)
library(tidyverse)
library(timetk)
library(gmailr)
library(twilio)
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
hierarchy_tbl <- read_rds("m5-forecasting-accuracy/sales_sample_tbl.rds") %>%
select(contains("id"))
full_data_tbl    <- read_rds("m5-forecasting-accuracy/full_data_tbl.rds")
test_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/test_forecast_ensemble_tbl.rds")
future_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/future_forecast_ensemble_tbl.rds")
purchases_summarized_tbl <- full_data_tbl %>%
select(category, identifier, value) %>%
group_by(category, identifier) %>%
summarise(value = sum(value, na.rm = T)) %>%
ungroup() %>%
filter(category == 'item_id') %>%
left_join(hierarchy_tbl, by = c("identifier" = "item_id")) %>%
select(-id)
indicator_options <- full_data_tbl %>%
distinct(category, identifier) %>%
mutate(category = factor(
category,
levels = c("all_stores_id", "state_id", "store_id",
"cat_id", "dept_id", "item_id"))
) %>%
arrange(category, identifier) %>%
pull(identifier)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
rlang::last_trace()
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
ungroup()
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
ungroup()
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
ungroup()
filtered_tbl
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
ungroup()
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, .value, .date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
ungroup()
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(category, .value, .index,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
rlang::last_trace()
rlang::last_trace(drop = FALSE)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
filtered_tbl
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)%>%
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
filtered_tbl
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
send_email
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
hierarchy_tbl <- read_rds("m5-forecasting-accuracy/sales_sample_tbl.rds") %>%
select(contains("id"))
full_data_tbl    <- read_rds("m5-forecasting-accuracy/full_data_tbl.rds")
test_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/test_forecast_ensemble_tbl.rds")
future_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/future_forecast_ensemble_tbl.rds")
purchases_summarized_tbl <- full_data_tbl %>%
select(category, identifier, value) %>%
group_by(category, identifier) %>%
summarise(value = sum(value, na.rm = T)) %>%
ungroup() %>%
filter(category == 'item_id') %>%
left_join(hierarchy_tbl, by = c("identifier" = "item_id")) %>%
select(-id)
indicator_options <- full_data_tbl %>%
distinct(category, identifier) %>%
mutate(category = factor(
category,
levels = c("all_stores_id", "state_id", "store_id",
"cat_id", "dept_id", "item_id"))
) %>%
arrange(category, identifier) %>%
pull(identifier)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
knitr::opts_chunk$set(
echo    = FALSE,
message = FALSE,
warning = FALSE
)
# IMPORTANT NOTE!!!
# INSTALL DEVELOPMENT VERSION OF RMARKDOWN AND CROSSTALK
# rmarkdown   * 2.6.6   2021-02-02 [1] Github (rstudio/rmarkdown@d8e7a15)
# Run These:
# remotes::install_github("rstudio/rmarkdown")
# remotes::install_github("rstudio/crosstalk")
library(shiny)
library(collapsibleTree)
library(plotly)
library(DT)
library(modeltime)
library(modeltime.ensemble)
library(tidymodels)
library(tidyverse)
library(timetk)
library(gmailr)
library(twilio)
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
hierarchy_tbl <- read_rds("m5-forecasting-accuracy/sales_sample_tbl.rds") %>%
select(contains("id"))
full_data_tbl    <- read_rds("m5-forecasting-accuracy/full_data_tbl.rds")
test_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/test_forecast_ensemble_tbl.rds")
future_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/future_forecast_ensemble_tbl.rds")
purchases_summarized_tbl <- full_data_tbl %>%
select(category, identifier, value) %>%
group_by(category, identifier) %>%
summarise(value = sum(value, na.rm = T)) %>%
ungroup() %>%
filter(category == 'item_id') %>%
left_join(hierarchy_tbl, by = c("identifier" = "item_id")) %>%
select(-id)
indicator_options <- full_data_tbl %>%
distinct(category, identifier) %>%
mutate(category = factor(
category,
levels = c("all_stores_id", "state_id", "store_id",
"cat_id", "dept_id", "item_id"))
) %>%
arrange(category, identifier) %>%
pull(identifier)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
# Email function
send_email <- function(to, category, value, date) {
subject <- paste("Alert for date", date)
body <- paste("Category:", category,
"\n The forcast for the previous category on",date," is:", value)
email <- gm_mime() %>%
gm_to(to) %>%
gm_from("bean.sag.bs@gmail.com") %>%
gm_subject(subject) %>%
gm_text_body(body)
gm_send_message(email)
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
# Email function
send_email <- function(to, identifier, value, date) {
subject <- paste("Alert for date", date)
body <- paste("Category:", identifier,
"\n The forcast for the previous category on",date," is:", value)
email <- gm_mime() %>%
gm_to(to) %>%
gm_from("bean.sag.bs@gmail.com") %>%
gm_subject(subject) %>%
gm_text_body(body)
gm_send_message(email)
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", category, value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 70)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, .value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 50)%>%
group_by(identifier)
filtered_tbl
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 50)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, .value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 50)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, .value,date)
})
}
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 50)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, .value,date)
})
}
knitr::opts_chunk$set(
echo    = FALSE,
message = FALSE,
warning = FALSE
)
# IMPORTANT NOTE!!!
# INSTALL DEVELOPMENT VERSION OF RMARKDOWN AND CROSSTALK
# rmarkdown   * 2.6.6   2021-02-02 [1] Github (rstudio/rmarkdown@d8e7a15)
# Run These:
# remotes::install_github("rstudio/rmarkdown")
# remotes::install_github("rstudio/crosstalk")
library(shiny)
library(collapsibleTree)
library(plotly)
library(DT)
library(modeltime)
library(modeltime.ensemble)
library(tidymodels)
library(tidyverse)
library(timetk)
library(gmailr)
library(twilio)
#Gmail auth
gm_auth_configure(path = "client_secret.json")
gm_auth()
# Email function
send_email <- function(to, identifier, value, date) {
subject <- paste("Alert for date", date)
body <- paste("Category:", identifier,
"\n The forcast for the previous category on",date," is:", value)
email <- gm_mime() %>%
gm_to(to) %>%
gm_from("bean.sag.bs@gmail.com") %>%
gm_subject(subject) %>%
gm_text_body(body)
gm_send_message(email)
}
hierarchy_tbl <- read_rds("m5-forecasting-accuracy/sales_sample_tbl.rds") %>%
select(contains("id"))
full_data_tbl    <- read_rds("m5-forecasting-accuracy/full_data_tbl.rds")
test_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/test_forecast_ensemble_tbl.rds")
future_forecast_ensemble_tbl <- read_rds("m5-forecasting-accuracy/future_forecast_ensemble_tbl.rds")
purchases_summarized_tbl <- full_data_tbl %>%
select(category, identifier, value) %>%
group_by(category, identifier) %>%
summarise(value = sum(value, na.rm = T)) %>%
ungroup() %>%
filter(category == 'item_id') %>%
left_join(hierarchy_tbl, by = c("identifier" = "item_id")) %>%
select(-id)
indicator_options <- full_data_tbl %>%
distinct(category, identifier) %>%
mutate(category = factor(
category,
levels = c("all_stores_id", "state_id", "store_id",
"cat_id", "dept_id", "item_id"))
) %>%
arrange(category, identifier) %>%
pull(identifier)
filtered_tbl <- future_forecast_ensemble_tbl %>%
arrange(desc(date)) %>%
slice_head(n = 28) %>%
filter(.value > 50)%>%
group_by(identifier)
#If there are matching rows, send email notifications using pmap
if (nrow(filtered_tbl) > 0)
{
pmap(filtered_tbl, function(identifier, .value, date,...) {
send_email("alsaghierbayan@gmail.com", identifier, .value,date)
})
}
runApp('D:/Firas/Apps/Deploed to shinny/L55_workflowsets')
runApp('D:/Firas/Apps/Deploed to shinny/L58_cust_lifetime')
runApp('D:/Firas/Apps/Deploed to shinny/L58_cust_lifetime')
